/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dreamcatcher.breakdown;

import java.util.Collection;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import org.dreamcatcher.util.APIObject;
import writer.Breakdown;
import org.dreamcatcher.util.Notifier;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.Utilities;
import org.openide.util.lookup.InstanceContent;
import org.openide.windows.Mode;
import org.openide.windows.WindowManager;
import writer.ProjectSettingsException;
import writer.SceneElement;
import writer.XMLManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.dreamcatcher.breakdown//breakdown_sheet//EN",
autostore = false)
@TopComponent.Description(preferredID = "breakdown_sheetTopComponent",
iconBase = "org/dreamcatcher/breakdown/breakdown.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "org.dreamcatcher.breakdown.breakdown_sheetTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_breakdown_sheetAction",
preferredID = "breakdown_sheetTopComponent")
public final class BreakdownTopComponent extends TopComponent implements LookupListener {

    private DefaultComboBoxModel comboModel;
    private final InstanceContent instanceContent = new InstanceContent();
    private int count = 0;
    private static SceneElement sceneWithName = null;

    public BreakdownTopComponent() {
        initComponents();

        setName(NbBundle.getMessage(BreakdownTopComponent.class, "CTL_breakdown_sheetTopComponent"));
        setToolTipText(NbBundle.getMessage(BreakdownTopComponent.class, "HINT_breakdown_sheetTopComponent"));
        jList2.setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        intSceneNumber = new javax.swing.JTextField();
        intExtScne = new javax.swing.JComboBox();
        DayNightScene = new javax.swing.JComboBox();
        daySceneNumber = new javax.swing.JTextField();
        totalScenes = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jComboBox10 = new javax.swing.JComboBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel2.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel3.text_1")); // NOI18N

        intSceneNumber.setEditable(false);
        intSceneNumber.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.intSceneNumber.text_1")); // NOI18N
        intSceneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intSceneNumberActionPerformed(evt);
            }
        });

        intExtScne.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "INT", "EXT", "OTHER" }));
        intExtScne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intExtScneActionPerformed(evt);
            }
        });

        DayNightScene.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DAY", "NIGHT", "OTHER" }));
        DayNightScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayNightSceneActionPerformed(evt);
            }
        });

        daySceneNumber.setEditable(false);
        daySceneNumber.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.daySceneNumber.text_1")); // NOI18N

        totalScenes.setEditable(false);
        totalScenes.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.totalScenes.text_1")); // NOI18N
        totalScenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalScenesActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel4.text_1")); // NOI18N

        setMaximumSize(new java.awt.Dimension(50, 32767));
        setMinimumSize(new java.awt.Dimension(356, 0));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 456));

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Scenes Yet" }));
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });

        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jTabbedPane2.addTab(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jScrollPane2.TabConstraints.tabTitle"), jScrollPane2); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel5.text_1")); // NOI18N

        jTextField4.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField4.text_1")); // NOI18N
        jTextField4.setToolTipText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField4.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel6.text_1")); // NOI18N

        jTextField5.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField5.text_1")); // NOI18N
        jTextField5.setToolTipText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField5.toolTipText")); // NOI18N
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel7.text_1")); // NOI18N
        jLabel7.setToolTipText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel7.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel8.text_1")); // NOI18N
        jLabel8.setToolTipText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel8.toolTipText")); // NOI18N

        jTextField6.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField6.text_1")); // NOI18N
        jTextField6.setToolTipText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField6.toolTipText")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField1.text_1")); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel1.text_1")); // NOI18N

        jTextField2.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField2.text_1")); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel11.text_1")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jPanel3.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel9.text_1")); // NOI18N

        jTextField7.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField7.text_1")); // NOI18N
        jTextField7.setToolTipText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField7.toolTipText")); // NOI18N
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField7FocusLost(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });

        jTextField8.setText(org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jTextField8.text_1")); // NOI18N
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField8FocusLost(evt);
            }
        });
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel10.text_1")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField7)
                    .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(184, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(BreakdownTopComponent.class, "BreakdownTopComponent.jLabel12.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox10, 0, 330, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(8, 8, 8)
                .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                .addGap(93, 93, 93))
        );

        jScrollPane3.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
    // TODO add your handling code here:
    addElement();
}//GEN-LAST:event_jList2ValueChanged

private void intSceneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intSceneNumberActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_intSceneNumberActionPerformed

private void intExtScneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intExtScneActionPerformed
// TODO add your handling code here:
    //change the number of scenes that are either internal or external
    if (intExtScne.getSelectedItem().toString().equalsIgnoreCase("INT")) {
        //Set the value of the textField to number of int scenes
        intSceneNumber.setText("Int unkown");
    } else if (intExtScne.getSelectedItem().toString().equalsIgnoreCase("EXT")) {
        //set the value of ext scenes
        intSceneNumber.setText("Ext unknown");
    } else {
        intSceneNumber.setText(String.valueOf(0));
    }

}//GEN-LAST:event_intExtScneActionPerformed

private void DayNightSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayNightSceneActionPerformed
// TODO add your handling code here:
    //change the night or day type of scene
}//GEN-LAST:event_DayNightSceneActionPerformed

private void totalScenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalScenesActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_totalScenesActionPerformed

private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextField5ActionPerformed

private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
    // TODO add your handling code here:
    //Set the current scene to be the chosen one
    String valueOf = String.valueOf(jComboBox10.getSelectedItem());
    sceneWithName = Breakdown.getSceneWithName(valueOf);
    jTextField5.setText(sceneWithName.getSceneName());
    jTextField4.setText(String.valueOf(sceneWithName.getSceneNumber()));
    jTextField6.setText(String.valueOf(sceneWithName.getSceneSizeInEigths()));
    jTextField7.setText(String.valueOf(sceneWithName.getSceneNumberOfSetups()));
    jTextField8.setText(String.valueOf(sceneWithName.getShootDays()));
    jTextField1.setText(sceneWithName.getSceneType());
    jTextField2.setText(sceneWithName.isDay()?"DAY":"NIGHT");
    //save the saved details of the previous scene

}//GEN-LAST:event_jComboBox10ActionPerformed

private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed

private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextField7ActionPerformed

private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
// TODO add your handling code here:

}//GEN-LAST:event_jTextField8ActionPerformed

private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextField2ActionPerformed

private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped
// TODO add your handling code here:

}//GEN-LAST:event_jTextField8KeyTyped

private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
// TODO add your handling code here:

}//GEN-LAST:event_jTextField7KeyTyped

private void jTextField8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusLost
// TODO add your handling code here:
     sceneWithName.setShootDays(Integer.parseInt(jTextField8.getText()));
    addChangesToElement(sceneWithName);
}//GEN-LAST:event_jTextField8FocusLost

private void jTextField7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusLost
// TODO add your handling code here:
    sceneWithName.setSceneNumberOfSetups(Integer.parseInt(jTextField7.getText()));
    addChangesToElement(sceneWithName);
}//GEN-LAST:event_jTextField7FocusLost
    JFrame mainFrame = (JFrame) WindowManager.getDefault().getMainWindow();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox DayNightScene;
    private javax.swing.JTextField daySceneNumber;
    private javax.swing.JComboBox intExtScne;
    private javax.swing.JTextField intSceneNumber;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField totalScenes;
    // End of variables declaration//GEN-END:variables
    private Lookup.Result result = null;
    DefaultListModel model = new DefaultListModel();

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        result = Utilities.actionsGlobalContext().lookupResult(APIObject.class);
        result.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        result.removeLookupListener(this);
        result = null;
    }

    @Override
    public void resultChanged(LookupEvent lookupEvent) {
        Lookup.Result r = (Lookup.Result) lookupEvent.getSource();
        Collection c = r.allInstances();
        String listSwitch = "";
        int sample;
        Object d;
        if (!c.isEmpty()) {
            APIObject o = (APIObject) c.iterator().next();
            if (o.getSceneElement() != null) {
                //Change the values of a scene
                SceneElement sceneNumber = o.getSceneElement();
                jTextField4.setText(String.valueOf(sceneNumber.getSceneNumber()));
                jTextField5.setText(sceneNumber.getSceneName());
                jTextField6.setText(String.valueOf(sceneNumber.getSceneSizeInEigths()));
                jTextField7.setText(String.valueOf(sceneNumber.getSceneNumberOfSetups()));
                jTextField8.setText(String.valueOf(sceneNumber.getShootDays()));
                jTextField1.setText(sceneNumber.getSceneType());
//                jTextField2.setText(sceneWithName.isDay()?"DAY":"NIGHT");
                //jComboBox10.setSelectedIndex(sceneNumber.getSceneNumber()-1);

                sceneWithName = sceneNumber;
               // jComboBox10.setSelectedIndex(sceneNumber.getSceneNumber());

            }
            /*if (o.getToBeChanged() == null || o.getToBeChanged().equalsIgnoreCase("STATUS")) {
                if (o.getToggle() == null || !(o.getToggle().equalsIgnoreCase("enable"))) {
                    PreviousBreakDown.setEnabled(false);
                    NextBreakDown.setEnabled(false);
                } else {
                    PreviousBreakDown.setEnabled(true);
                    NextBreakDown.setEnabled(true);
                }
            }*/

            if (o.getModelElement().getSize() >= 1) {
                jComboBox10.setModel(o.getModelElement());
                //totalScenes1.setText(String.valueOf(o.getNumberOfScenes()));
                //daySceneNumber1.setText(String.valueOf(Breakdown.getNumberOfInternalScenes()));
                //intSceneNumber1.setText(String.valueOf(Breakdown.getNumberOfAllDayScenes()));


            }
            if (o.getNumber() > 0) {
                //Might occur in the event that the list is recreated
                int modelsize = jList2.getModel().getSize();
                if (modelsize == 0) {
                    model.add(modelsize, o.getElement() + " (" + o.getNumber() + ")");
                }
                listSwitch = o.getElement();
                //If a non-string is changed,set the value at the scene
                handleBreakDownList(listSwitch, o);
            }
        } else {
            //No lookup source
            //Do nothing for user
            //print notice
            System.out.print("No Look up source");
        }


    }

    /**
     * Opens the top component on the right side of the desktop.
     */
    @Override
    public void open() {
        Mode mode = WindowManager.getDefault().findMode("properties");
        if (mode != null) {
            mode.dockInto(this);
            super.open();
        }
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    void addElement() {
        Elements me = new Elements(mainFrame, true);
        me.setTitle("Elements Entry");
        me.setLocationRelativeTo(null);
        me.setVisible(true);

    }

    private void addChangesToElement(SceneElement sceneelement) {
        try {
            XMLManager.getInstance().editElement(sceneelement);
        } catch (ProjectSettingsException ex) {
            Notifier.getInstance().giveMessage(ex.getLocalizedMessage(), 3);
        }
    }
    //ListModel model;

    public boolean writeToXml(String actualItem, String itemType, String[] scenes, String description) throws ProjectSettingsException {
        boolean status = false;

        //write the tagged element to the xmlconf file before updating the list
        if (XMLManager.getInstance().tag(actualItem, itemType, scenes, description)) {
            status = true;
        }
        return status;
    }

    public void write(String actualItem, String itemType, String[] scenes, String itemDescription) throws ItemAlreadyTaggedException {
        try {
            if (writeToXml(actualItem, itemType, scenes, itemDescription)) {
                //Special way to show that the last action was successful
            } else {
                //the writing is not successful
                throw new ItemAlreadyTaggedException("Item already tagged");
            }
        } catch (ProjectSettingsException ex) {
            Notifier.getInstance().giveMessage(ex.getMessage(), 3);
        }
    }

    private int getModelIndex(String string) {
        int itemIndex = model.getSize();
        for (int i = 0; i < model.getSize(); i++) {
            String value = model.getElementAt(i).toString();
            int stringLength = string.length();
            String fixedvalue = value.substring(0, stringLength);
            if (string.equals(fixedvalue)) {

                itemIndex = i;
                break;
            }

        }
        return itemIndex;
    }

    private void handleBreakDownList(String string, APIObject o) {
        int sample = getModelIndex(string);
        if (sample == model.getSize()) {
            //get the number where it is and update it
            model.add(sample++, o.getElement() + " (" + o.getNumber() + ")");


        } else {
            model.set(sample, o.getElement() + " (" + o.getNumber() + ")");
        }
    }
}
