/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dreamcatcher.main;

import javax.swing.ActionMap;
import javax.swing.text.DefaultEditorKit;
import org.dreamcatcher.main.projectExplorer.FileItem;
import org.dreamcatcher.main.projectExplorer.MainNode;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.filesystems.FileObject;
import writer.DefaultProperties;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.dreamcatcher.main//projects//EN",
autostore = true)
@TopComponent.Description(preferredID = "projectsTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.dreamcatcher.main.projectsTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_projectsAction",
preferredID = "projectsTopComponent")
public final class projectsTopComponent extends TopComponent implements ExplorerManager.Provider {

    private transient ExplorerManager explorerManager = new ExplorerManager();

    //FileObject fileObject = FileUtil.toFileObject(new File("/home/slowcoach/Preproduction Projects"));
    FileObject fileObject=DefaultProperties.getInstance().getDefaultProjectsDirectory();

    public projectsTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(projectsTopComponent.class, "CTL_projectsTopComponent"));
        setToolTipText(NbBundle.getMessage(projectsTopComponent.class, "HINT_projectsTopComponent"));
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);
        //associateLookup(ExplorerUtils.createLookup(explorerManager, getActionMap()));
        //MainNode shedefs [] = new MainNode[5];
        //explorerManager.setExploredContext(Node.EMPTY, shedefs);
        ActionMap map = getActionMap();

        map.put(DefaultEditorKit.copyAction, ExplorerUtils.actionCopy(explorerManager));
        map.put(DefaultEditorKit.cutAction, ExplorerUtils.actionCut(explorerManager));
        map.put(DefaultEditorKit.pasteAction, ExplorerUtils.actionPaste(explorerManager));
        map.put("delete", ExplorerUtils.actionDelete(explorerManager, true));
        explorerManager.setRootContext(new MainNode(new FileItem(fileObject)));
        //explorerManager.setRootContext(new AbstractNode(Children.create(new MyChildren(), true)));

       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new BeanTreeView();

        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setMaximumSize(new java.awt.Dimension(26, 26));
        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {

        return explorerManager;
    }
}
